{"version":3,"file":"addmore.min.js","sources":["../src/addmore.js"],"sourcesContent":["define(['jquery'], function($) {\n\n    var addElements = {\n\n        /**\n         * Deletes a an array template variable value.\n         *\n         * @param {Array} templateVars The template variables.\n         * @param {String} variableNames The recipe hierarchy for the variable.\n         * @param {Boolean} isComponentFeature If the elements are a component feature.\n         */\n        deleteElements: function(templateVars, variableNames, isComponentFeature) {\n\n            var variableName;\n            var idPrefix;\n            var i;\n\n            if (isComponentFeature) {\n                var componentFeatures = variableNames[0];\n                variableName = variableNames[1];\n                idPrefix = componentFeatures + '_' + variableName;\n            } else {\n                variableName = variableNames[0];\n                idPrefix = variableName;\n            }\n\n            var countName = idPrefix + 'count';\n            var variableCount = parseInt($('[name=\"' + countName + '\"]').val());\n\n            var templateVariable;\n            for (i in templateVars) {\n                if (templateVars[i].name == variableName) {\n                    templateVariable = templateVars[i];\n                    break;\n                }\n            }\n\n            if (variableCount == 1) {\n                var elementIdPrefix = 'id_' + idPrefix + '_0';\n                addElements.removeInputFromNode(templateVariable, elementIdPrefix);\n                return;\n            }\n\n            var lastIndex = variableCount - 1;\n\n            // Removing the newline before the element that will be deleted.\n            $('#id_' + idPrefix + ' br').last().remove();\n\n            for (i in templateVariable.values) {\n                var fieldVariable = templateVariable.values[i];\n                var lastElementDiv = 'fitem_id_' + idPrefix + '_' + lastIndex + '_' + fieldVariable.name;\n\n                $('#' + lastElementDiv).remove();\n\n                if (fieldVariable.type === 'numeric-array') {\n\n                    var nestedCountName = idPrefix + '_' + lastIndex + '_' + fieldVariable.name + 'count';\n                    var nestedCount = parseInt($(\"[name='\" + nestedCountName + \"']\").val());\n\n                    // Removing the newlines between the nested array elements.\n                    if (nestedCount >= 2) {\n                        $('#id_' + idPrefix + ' br').slice(-(nestedCount - 1)).remove();\n                    }\n\n                    for (var j in fieldVariable.values) {\n\n                        var nestedVariable = fieldVariable.values[j];\n\n                        for (var k = 0; k < nestedCount; k++) {\n                            var nestedDiv = lastElementDiv + '_' + k + '_' + nestedVariable.name;\n                            $('#' + nestedDiv).remove();\n                        }\n                    }\n\n                    // Removing the 'Add more ..' button.\n                    var buttonDivId = 'fitem_id_addmore_' + idPrefix + '_' + lastIndex + '_' + fieldVariable.name;\n                    $('#' + buttonDivId).remove();\n\n                    // Remove the number of nested variables.\n                    $(\"[name='\" + nestedCountName + \"']\").remove();\n                }\n            }\n\n            // Decrement the number of variable elements.\n            $('[name=\"' + countName + '\"]').val(variableCount - 1);\n        },\n\n        /**\n         * Adds more elements to a fieldset located at the root of the document.\n         *\n         * @param {Array} templateVars The template variables.\n         * @param {String} variableNames The recipe hierarchy for the variable.\n         * @param {Boolean} isComponentFeature If the elements are a component feature.\n         */\n        addMoreRootElements: function(templateVars, variableNames, isComponentFeature) {\n\n            var variableName;\n            var namePrefix;\n            var idPrefix;\n            var i;\n\n            if (isComponentFeature) {\n                var componentFeatures = variableNames[0];\n                variableName = variableNames[1];\n                namePrefix = componentFeatures + '[' + variableName + ']';\n                idPrefix = componentFeatures + '_' + variableName;\n            } else {\n                variableName = variableNames[0];\n                namePrefix = variableName;\n                idPrefix = variableName;\n            }\n\n            var countName = idPrefix + 'count';\n            var variableCount = parseInt($('[name=\"' + countName + '\"]').val());\n\n            var templateVariable;\n            for (i in templateVars) {\n                if (templateVars[i].name == variableName) {\n                    templateVariable = templateVars[i];\n                    break;\n                }\n            }\n\n            var prevIndex = variableCount - 1;\n            var elementIdPrefix;\n            var newElements = '<br/>';\n\n            for (i in templateVariable.values) {\n                var fieldVariable = templateVariable.values[i];\n\n                var newElementName = namePrefix + '[' + variableCount + '][' + fieldVariable.name + ']';\n                var newElementId = 'id_' + idPrefix + '_' + variableCount + '_' + fieldVariable.name;\n\n                var prevElementName = namePrefix + '[' + prevIndex + '][' + fieldVariable.name + ']';\n                var prevElementId = 'id_' + idPrefix + '_' + prevIndex + '_' + fieldVariable.name;\n\n                if (fieldVariable.type == 'numeric-array') {\n\n                    // Cloning the static label.\n                    var prevElementClasses = $('#fitem_' + prevElementId).attr('class');\n                    newElements += '<div id=\"fitem_' + newElementId + '\" class=\"' + prevElementClasses + '\">';\n                    newElements += $('#fitem_' + prevElementId).html();\n                    newElements += '</div>';\n\n                    for (var j in fieldVariable.values) {\n                        var nestedVariable = fieldVariable.values[j];\n\n                        var newNestedElementName = newElementName + '[0][' + nestedVariable.name + ']';\n                        var newNestedElementId = newElementId + '_0_' + nestedVariable.name;\n\n                        var prevNestedElementName = prevElementName + '[0][' + nestedVariable.name + ']';\n                        var prevNestedElementId = prevElementId + '_0_' + nestedVariable.name;\n\n                        var prevNestedIndex = prevIndex + '.0';\n                        var newNestedIndex = variableCount + '.0';\n                        newElements += addElements.copyElement(prevNestedElementName, prevNestedElementId,\n                                                               newNestedElementName, newNestedElementId,\n                                                               prevNestedIndex, newNestedIndex);\n                    }\n\n                    // Cloning the 'Add more ..' button.\n                    var newButtonId = 'id_addmore_' + idPrefix + '_' + variableCount + '_' + fieldVariable.name;\n                    var newButtonName = 'addmore_' + namePrefix + '[' + variableCount + '][' + fieldVariable.name + ']';\n\n                    var prevButtonId = 'id_addmore_' + idPrefix + '_' + prevIndex + '_' + fieldVariable.name;\n                    var prevButtonName = 'addmore_' + namePrefix + '[' + prevIndex + '][' + fieldVariable.name + ']';\n\n                    newElements += addElements.copyElement(prevButtonName, prevButtonId, newButtonName, newButtonId,\n                                                           null, null);\n\n                    // Adding the hidden count field.\n                    var prevCountName = idPrefix + '_' + prevIndex + '_' + fieldVariable.name + 'count';\n                    var newCountName = idPrefix + '_' + variableCount + '_' + fieldVariable.name + 'count';\n                    var newCountHtml = '<input name=\"' + newCountName + '\" value=\"1\" type=\"hidden\"></input>';\n                    $('[name=\"' + prevCountName + '\"]').after(newCountHtml);\n\n                } else {\n                    newElements += addElements.copyElement(prevElementName, prevElementId, newElementName, newElementId,\n                                                           prevIndex, variableCount);\n                }\n            }\n\n            $('#fgroup_id_buttons_' + idPrefix).before(newElements);\n\n            elementIdPrefix = 'id_' + idPrefix + '_' + variableCount;\n            addElements.removeInputFromNode(templateVariable, elementIdPrefix);\n\n            // Increment the number of variable elements.\n            $('[name=\"' + countName + '\"]').val(variableCount + 1);\n        },\n\n        /**\n         * Adds more elements nested inside a fieldset element.\n         *\n         * @param {Array} templateVars The template variables.\n         * @param {String} variableNames The recipe hierarchy for the variable.\n         * @param {Boolean} isComponentFeature If the elements are a component feature.\n         * @param {Boolean} isPartOfAssocArray If the elements to add are part of an associative array variable.\n         */\n        addMoreNestedElements: function(templateVars, variableNames, isComponentFeature, isPartOfAssocArray) {\n\n            var namePrefix;\n            var idPrefix;\n            var parentVariableName;\n            var variableName;\n            var topIndex;\n            var i;\n\n            if (isPartOfAssocArray) {\n                if (isComponentFeature) {\n                    // Componenenttype_features[<parent associative array>][<numeric array>].\n                    namePrefix = variableNames[0] + '[' + variableNames[1] + '][' + variableNames[2] + ']';\n                    idPrefix = variableNames[0] + '_' + variableNames[1] + '_' + variableNames[2];\n                    parentVariableName = variableNames[1];\n                    variableName = variableNames[2];\n                } else {\n                    // Parent associative array[numeric array].\n                    namePrefix = variableNames[0] + '[' + variableNames[1] + ']';\n                    idPrefix = variableNames[0] + '_' + variableNames[1];\n                    parentVariableName = variableNames[0];\n                    variableName = variableNames[1];\n                }\n                topIndex = null;\n            } else {\n                if (isComponentFeature) {\n                    // Componenenttype_features[<parent numeric array>][<index>][<numeric array>].\n                    namePrefix = variableNames[0] + '[' + variableNames[1] + '][' + variableNames[2] + ']';\n                    namePrefix = namePrefix + '[' + variableNames[3] + ']';\n                    idPrefix = variableNames[0] + '_' + variableNames[1] + '_' + variableNames[2] + '_' + variableNames[3];\n                    parentVariableName = variableNames[1];\n                    variableName = variableNames[3];\n                    topIndex = variableNames[2];\n                } else {\n                    // Parent numeric array[<index>][<numeric array>].\n                    namePrefix = variableNames[0] + '[' + variableNames[1] + '][' + variableNames[2] + ']';\n                    idPrefix = variableNames[0] + '_' + variableNames[1] + '_' + variableNames[2];\n                    parentVariableName = variableNames[0];\n                    variableName = variableNames[2];\n                    topIndex = variableNames[1];\n                }\n            }\n\n            var countName = idPrefix + 'count';\n            var variableCount = parseInt($('[name=\"' + countName + '\"]').val());\n\n            var templateVariable;\n            for (i in templateVars) {\n                if (templateVars[i].name == parentVariableName) {\n                    for (var j in templateVars[i].values) {\n                        if (templateVars[i].values[j].name == variableName) {\n                            templateVariable = templateVars[i].values[j];\n                            break;\n                        }\n                    }\n                }\n            }\n\n            var prevIndex = variableCount - 1;\n            var newElements = '<br/>';\n            for (i in templateVariable.values) {\n\n                var fieldVariable = templateVariable.values[i];\n\n                var newElementName = namePrefix + '[' + variableCount + '][' + fieldVariable.name + ']';\n                var newElementId = 'id_' + idPrefix + '_' + variableCount + '_' + fieldVariable.name;\n\n                var prevElementName = namePrefix + '[' + prevIndex + '][' + fieldVariable.name + ']';\n                var prevElementId = 'id_' + idPrefix + '_' + prevIndex + '_' + fieldVariable.name;\n\n                var prevIndexPrefix;\n                var newIndexPrefix;\n                if (topIndex === null) {\n                    prevIndexPrefix = prevIndex;\n                    newIndexPrefix = variableCount;\n                } else {\n                    prevIndexPrefix = topIndex + '.' + prevIndex;\n                    newIndexPrefix = topIndex + '.' + variableCount;\n                }\n                newElements += addElements.copyElement(prevElementName, prevElementId,\n                                                        newElementName, newElementId,\n                                                        prevIndexPrefix, newIndexPrefix);\n            }\n\n            $('#fitem_id_addmore_' + idPrefix).before(newElements);\n\n            var elementIdPrefix = 'id_' + idPrefix + '_' + variableCount;\n            addElements.removeInputFromNode(templateVariable, elementIdPrefix);\n\n            // Increment the number of variable elements.\n            $('[name=\"' + countName + '\"]').val(variableCount + 1);\n\n        },\n\n        /**\n         * Removes previous input from a node.\n         *\n         * @param {Array} templateVariable The variable from which the added elements were created.\n         * @param {String} elementIdPrefix The prefix for the elements' id.\n         */\n        removeInputFromNode: function(templateVariable, elementIdPrefix) {\n\n            var i;\n\n            for (i in templateVariable.values) {\n\n                var fieldVariable = templateVariable.values[i];\n                var newElementId = elementIdPrefix + '_' + fieldVariable.name;\n\n                if (fieldVariable.type == 'text' || fieldVariable.type == 'int') {\n                    $('#' + newElementId).val('');\n                }\n\n                // Non required boolean variables are represented as a select element.\n                if (fieldVariable.type == 'multiple-options' || fieldVariable.type == 'boolean') {\n                    var isRequired = ('required' in fieldVariable) && fieldVariable.required === true;\n                    if (!isRequired) {\n                        $('#' + newElementId + ' option[value=\"undefined\"]').prop('selected', true).change();\n                    }\n                }\n\n                if (fieldVariable.type == 'numeric-array') {\n                    var countName = newElementId.replace('id_', '') + 'count';\n                    var variableCount = parseInt($('[name=\"' + countName + '\"]').val());\n\n                    for (var j = 0; j < variableCount; j++) {\n                        var newIdPrefix = newElementId + '_' + j;\n                        addElements.removeInputFromNode(fieldVariable, newIdPrefix);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Creates a clone of a previous element.\n         *\n         * @param {String} prevElementName\n         * @param {String} prevElementId\n         * @param {String} newElementName\n         * @param {String} newElementId\n         * @param {String} prevIndex\n         * @param {String} newIndex\n         * @returns {String}\n         */\n        copyElement: function(prevElementName, prevElementId, newElementName, newElementId, prevIndex, newIndex) {\n\n            var prevElementClasses = $('#fitem_' + prevElementId).attr('class');\n            var newElementHtml = $('#fitem_' + prevElementId).html();\n\n            while (newElementHtml.indexOf(prevElementId) != -1) {\n                newElementHtml = newElementHtml.replace(prevElementId, newElementId);\n            }\n\n            while (newElementHtml.indexOf(prevElementName) != -1) {\n                newElementHtml = newElementHtml.replace(prevElementName, newElementName);\n            }\n\n            if (prevIndex !== null) {\n                prevIndex = prevIndex + '. ';\n                newIndex = newIndex + '. ';\n                newElementHtml = newElementHtml.replace('label for=\"' + newElementId + '\">' + prevIndex,\n                                                        'label for=\"' + newElementId + '\">' + newIndex);\n            }\n\n            var newElement = '<div id=\"fitem_' + newElementId + '\" class=\"' + prevElementClasses + '\">';\n            newElement += newElementHtml;\n            newElement += '</div>';\n\n            return newElement;\n        },\n\n        /**\n         * Adds or remove fields from an array template variable.\n         */\n        addMore: function() {\n\n            $(document).ready(function() {\n                $('.mform').on('click', ':button', function(event) {\n                    var buttonName = event.target.name;\n\n                    if (buttonName.indexOf('addmore_') !== -1 || buttonName.indexOf('delete_') !== -1) {\n                        var templateVars = $.parseJSON($('[name=\"templatevars\"]').val());\n                        var componentType = $('[name=\"componenttype1\"]').val();\n                        var componentFeatures = componentType + '_features';\n\n                        var shouldAdd;\n                        var variableName;\n                        if (buttonName.indexOf('addmore_') !== -1) {\n                            shouldAdd = true;\n                            variableName = buttonName.replace('addmore_', '');\n                        } else {\n                            variableName = buttonName.replace('delete_', '');\n                            shouldAdd = false;\n                        }\n\n                        var variableNames = variableName.split(/\\]\\[|\\[|\\]/gi);\n                        // Removing last empty element added by split.\n                        if (variableNames[variableNames.length - 1].length === 0) {\n                            variableNames.pop();\n                        }\n\n                        var isComponentFeature;\n                        if (variableNames[0] === componentFeatures) {\n                            isComponentFeature = true;\n                        } else {\n                            isComponentFeature = false;\n                        }\n\n                        var isNested = false;\n                        for (var i in variableNames) {\n                            if ($.isNumeric(variableNames[i])) {\n                                isNested = true;\n                                break;\n                            }\n                        }\n\n                        var isPartOfAssocArray = false;\n                        if (!isNested) {\n                            if (isComponentFeature && variableNames.length === 3) {\n                                isNested = true;\n                                isPartOfAssocArray = true;\n                            }\n\n                            if (!isComponentFeature && variableNames.length === 2) {\n                                isNested = true;\n                                isPartOfAssocArray = true;\n                            }\n                        }\n\n                        if (shouldAdd) {\n                            if (isNested) {\n                                addElements.addMoreNestedElements(templateVars, variableNames, isComponentFeature,\n                                                                  isPartOfAssocArray);\n                            } else {\n                                addElements.addMoreRootElements(templateVars, variableNames, isComponentFeature);\n                            }\n                        } else {\n                            addElements.deleteElements(templateVars, variableNames, isComponentFeature);\n                        }\n                    }\n                });\n            });\n        },\n    };\n\n    return addElements;\n});\n"],"names":["define","$","addElements","deleteElements","templateVars","variableNames","isComponentFeature","variableName","idPrefix","i","templateVariable","countName","variableCount","parseInt","val","name","lastIndex","last","remove","values","fieldVariable","lastElementDiv","type","nestedCountName","nestedCount","j","slice","nestedVariable","k","nestedDiv","buttonDivId","elementIdPrefix","removeInputFromNode","addMoreRootElements","namePrefix","componentFeatures","prevIndex","newElements","newElementName","newElementId","prevElementName","prevElementId","prevElementClasses","attr","html","newNestedElementName","newNestedElementId","prevNestedElementName","prevNestedElementId","prevNestedIndex","newNestedIndex","copyElement","newButtonId","newButtonName","prevButtonId","prevButtonName","prevCountName","newCountHtml","after","before","addMoreNestedElements","isPartOfAssocArray","parentVariableName","topIndex","prevIndexPrefix","newIndexPrefix","required","prop","change","replace","newIdPrefix","newIndex","newElementHtml","indexOf","newElement","addMore","document","ready","on","event","buttonName","target","shouldAdd","parseJSON","split","length","pop","isNested","isNumeric"],"mappings":"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"}